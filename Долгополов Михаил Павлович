#include <stdio.h>

typedef long long int Money; //RUR

long double inflation = 0.10;
Money flat_cost = 10 * 1000 * 1000;

struct Deposit
{
   Money deposit_account;
   double rate;
   Money month_pay;
};

struct Mortgage
{
   double rate;
   Money credit;
   Money platez; 
   Money month_pay;
};

struct Person
{
   Money salary;
   Money account;
   Money food;
   Money expences;
   struct Mortgage mortgage;
   struct Deposit deposit;
   Money rent;
};

struct Person alice;
struct Person bob;

//Alice
void alice_init()
{
   alice.account = 1000 * 1000;
   alice.salary = 200 * 1000;
   alice.food = 17 * 1000;
   alice.expences = 40 * 1000;
   alice.mortgage.rate = 0.19;
   alice.mortgage.credit = 10 * 1000 * 1000;
   alice.mortgage.platez = 1000 * 1000;
   alice.mortgage.month_pay = 143 * 1000;
   alice.account -= alice.mortgage.platez;
   alice.deposit.deposit_account;
   alice.deposit.rate = 0.20;
}

void alice_expences(const int month)
{
   alice.account -= alice.expences;
   if (month == 1)
   {
      alice.expences += alice.expences * inflation;
   }
}

void alice_food(const int month)
{
   alice.account -= alice.food;
   if (month == 1)
   {
      alice.food += alice.food * inflation;
   }
}

void alice_salary(const int month)
{
   alice.account += alice.salary;
   if (month == 1)
   {
      alice.salary += alice.salary * inflation;
   }
}

void alice_mortgage()
{
   alice.account -= alice.mortgage.month_pay;
}

void alice_deposit()
{
   alice.deposit.deposit_account += alice.deposit.deposit_account * alice.deposit.rate / 12;
   alice.deposit.deposit_account += alice.salary - alice.food - alice.expences - alice.mortgage.month_pay;
}

void flat_cost_height(const int month)
{
   if (month == 1)
   {
      flat_cost += flat_cost * inflation;
   }
}

void alice_print()
{
   printf("Alice account = %lld \n", flat_cost + alice.account + alice.deposit.deposit_account);
}

//Bob
void bob_init()
{
   bob.account;
   bob.salary = 200 * 1000;
   bob.food = 17 * 1000;
   bob.expences = 40 * 1000;
   bob.deposit.deposit_account = 1000 * 1000;
   bob.deposit.rate = 0.20;
   bob.rent = 30 * 1000;
}

void bob_expences(const int month)
{
   bob.account -= bob.expences;
   if (month == 1)
   {
      bob.expences += bob.expences * inflation;
   }
}

void bob_food(const int month)
{
   bob.account -= bob.food;
   if (month == 1)
   {
      bob.food += bob.food * inflation;
   }
}

void bob_salary(const int month)
{
   bob.account += bob.salary;
   if (month == 1)
   {
      bob.salary += bob.salary * inflation;
   }
}

void bob_rent(const int month)
{
   bob.account -= bob.rent;
   if (month == 1)
   {
      bob.rent += bob.rent * inflation;
   }
}

void bob_deposit()
{
   bob.deposit.deposit_account += bob.deposit.deposit_account * alice.deposit.rate / 12;
   bob.deposit.deposit_account += bob.salary - bob.food - bob.expences - bob.rent;
}

void bob_print()
{
   printf("Bob account = %lld \n", bob.account + bob.deposit.deposit_account);
}

void simulation()
{
   int month = 10;
   int yaer = 2024;
   while (!((month == 10) && (yaer == 2024 + 30)))
   {
      flat_cost_height(month);
      alice_salary(month);
      alice_mortgage();
      alice_food(month);
      alice_expences(month);
      alice_deposit();

      bob_salary(month);
      bob_food(month);
      bob_expences(month);
      bob_deposit();
      month++;
      if (month == 13)
      {
         month = 1;
         yaer++;
      }
   }
}

void result()
{
   if (alice.account >= bob.account)
   {
      printf("Alice won\n");
   }
   else
   {
      printf("Bob won\n");
   }
}

int main()
{
   bob_init();
   alice_init();
   simulation();
   alice_print();
   bob_print();
   result();
   return 1;
}
